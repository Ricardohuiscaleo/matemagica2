/**
 * üá®üá± REGIONES Y COMUNAS DE CHILE - Sistema Completo
 * Matem√°gica PWA - Datos geogr√°ficos actualizados 2024
 */

// üåé DATOS COMPLETOS DE CHILE - 16 REGIONES + COMUNAS
const REGIONES_COMUNAS_CHILE = {
    "arica-parinacota": {
        nombre: "Arica y Parinacota",
        codigo: "XV",
        comunas: [
            "Arica",
            "Camarones",
            "General Lagos",
            "Putre"
        ]
    },
    "tarapaca": {
        nombre: "Tarapac√°", 
        codigo: "I",
        comunas: [
            "Alto Hospicio",
            "Cami√±a",
            "Colchane",
            "Huara",
            "Iquique",
            "Pica",
            "Pozo Almonte"
        ]
    },
    "antofagasta": {
        nombre: "Antofagasta",
        codigo: "II", 
        comunas: [
            "Antofagasta",
            "Calama",
            "Mar√≠a Elena",
            "Mejillones",
            "Ollag√ºe",
            "San Pedro de Atacama",
            "Sierra Gorda",
            "Taltal",
            "Tocopilla"
        ]
    },
    "atacama": {
        nombre: "Atacama",
        codigo: "III",
        comunas: [
            "Alto del Carmen",
            "Caldera",
            "Cha√±aral",
            "Copiap√≥",
            "Diego de Almagro",
            "Freirina",
            "Huasco",
            "Tierra Amarilla",
            "Vallenar"
        ]
    },
    "coquimbo": {
        nombre: "Coquimbo",
        codigo: "IV",
        comunas: [
            "Andacollo",
            "Canela",
            "Combarbal√°",
            "Coquimbo",
            "Illapel",
            "La Higuera",
            "La Serena",
            "Los Vilos",
            "Monte Patria",
            "Ovalle",
            "Paiguano",
            "Punitaqui",
            "R√≠o Hurtado",
            "Salamanca",
            "Vicu√±a"
        ]
    },
    "valparaiso": {
        nombre: "Valpara√≠so",
        codigo: "V",
        comunas: [
            "Algarrobo",
            "Cabildo",
            "Calera",
            "Calle Larga",
            "Cartagena",
            "Casablanca",
            "Catemu",
            "Conc√≥n",
            "El Quisco",
            "El Tabo",
            "Hijuelas",
            "Isla de Pascua",
            "Juan Fern√°ndez",
            "La Cruz",
            "La Ligua",
            "Limache",
            "Llaillay",
            "Los Andes",
            "Nogales",
            "Olmu√©",
            "Panquehue",
            "Papudo",
            "Petorca",
            "Puchuncav√≠",
            "Putaendo",
            "Quillota",
            "Quilpu√©",
            "Quintero",
            "Rinconada",
            "San Antonio",
            "San Esteban",
            "San Felipe",
            "Santa Mar√≠a",
            "Santo Domingo",
            "Valpara√≠so",
            "Villa Alemana",
            "Vi√±a del Mar",
            "Zapallar"
        ]
    },
    "metropolitana": {
        nombre: "Regi√≥n Metropolitana de Santiago",
        codigo: "RM",
        comunas: [
            "Alhu√©",
            "Buin",
            "Calera de Tango",
            "Cerrillos",
            "Cerro Navia",
            "Colina",
            "Conchal√≠",
            "Curacav√≠",
            "El Bosque",
            "El Monte",
            "Estaci√≥n Central",
            "Huechuraba",
            "Independencia",
            "Isla de Maipo",
            "La Cisterna",
            "La Florida",
            "La Granja",
            "La Pintana",
            "La Reina",
            "Lampa",
            "Las Condes",
            "Lo Barnechea",
            "Lo Espejo",
            "Lo Prado",
            "Macul",
            "Maip√∫",
            "Mar√≠a Pinto",
            "Melipilla",
            "√ëu√±oa",
            "Padre Hurtado",
            "Paine",
            "Pedro Aguirre Cerda",
            "Pe√±aflor",
            "Pe√±alol√©n",
            "Pirque",
            "Providencia",
            "Pudahuel",
            "Puente Alto",
            "Quilicura",
            "Quinta Normal",
            "Recoleta",
            "Renca",
            "San Bernardo",
            "San Joaqu√≠n",
            "San Jos√© de Maipo",
            "San Miguel",
            "San Pedro",
            "San Ram√≥n",
            "Santiago",
            "Talagante",
            "Tiltil",
            "Vitacura"
        ]
    },
    "ohiggins": {
        nombre: "Libertador General Bernardo O'Higgins",
        codigo: "VI",
        comunas: [
            "Ch√©pica",
            "Chimbarongo",
            "Codegua",
            "Coinco",
            "Coltauco",
            "Do√±ihue",
            "Graneros",
            "La Estrella",
            "Las Cabras",
            "Litueche",
            "Lolol",
            "Machal√≠",
            "Malloa",
            "Marchihue",
            "Mostazal",
            "Nancagua",
            "Navidad",
            "Olivar",
            "Palmilla",
            "Paredones",
            "Peralillo",
            "Peumo",
            "Pichidegua",
            "Pichilemu",
            "Placilla",
            "Pumanque",
            "Quinta de Tilcoco",
            "Rancagua",
            "Rengo",
            "Requ√≠noa",
            "San Fernando",
            "San Vicente de Tagua Tagua",
            "Santa Cruz"
        ]
    },
    "maule": {
        nombre: "Maule",
        codigo: "VII",
        comunas: [
            "Cauquenes",
            "Chanco",
            "Colb√∫n",
            "Constituci√≥n",
            "Curepto",
            "Curic√≥",
            "Empedrado",
            "Huala√±√©",
            "Licant√©n",
            "Linares",
            "Longav√≠",
            "Maule",
            "Molina",
            "Parral",
            "Pelarco",
            "Pelluhue",
            "Pencahue",
            "Rauco",
            "Retiro",
            "R√≠o Claro",
            "Romeral",
            "Sagrada Familia",
            "San Clemente",
            "San Javier",
            "San Rafael",
            "Talca",
            "Teno",
            "Vichuqu√©n",
            "Villa Alegre",
            "Yerbas Buenas"
        ]
    },
    "nuble": {
        nombre: "√ëuble",
        codigo: "XVI",
        comunas: [
            "Bulnes",
            "Chill√°n",
            "Chill√°n Viejo",
            "Cobquecura",
            "Coelemu",
            "Coihueco",
            "El Carmen",
            "Ninhue",
            "√ëiqu√©n",
            "Pemuco",
            "Pinto",
            "Portezuelo",
            "Quill√≥n",
            "Quirihue",
            "R√°nquil",
            "San Carlos",
            "San Fabi√°n",
            "San Ignacio",
            "San Nicol√°s",
            "Treguaco",
            "Yungay"
        ]
    },
    "biobio": {
        nombre: "Biob√≠o",
        codigo: "VIII",
        comunas: [
            "Alto Biob√≠o",
            "Antuco",
            "Arauco",
            "Cabrero",
            "Ca√±ete",
            "Chiguayante",
            "Concepci√≥n",
            "Contulmo",
            "Coronel",
            "Curanilahue",
            "Florida",
            "Hualp√©n",
            "Hualqui",
            "Laja",
            "Lebu",
            "Los √Ålamos",
            "Los √Ångeles",
            "Lota",
            "Mulch√©n",
            "Nacimiento",
            "Negrete",
            "Penco",
            "Quilaco",
            "Quilleco",
            "San Pedro de la Paz",
            "San Rosendo",
            "Santa B√°rbara",
            "Santa Juana",
            "Talcahuano",
            "Tir√∫a",
            "Tom√©",
            "Tucapel",
            "Yumbel"
        ]
    },
    "araucania": {
        nombre: "La Araucan√≠a",
        codigo: "IX",
        comunas: [
            "Angol",
            "Carahue",
            "Cholchol",
            "Collipulli",
            "Cunco",
            "Curacaut√≠n",
            "Curarrehue",
            "Ercilla",
            "Freire",
            "Galvarino",
            "Gorbea",
            "Lautaro",
            "Loncoche",
            "Lonquimay",
            "Los Sauces",
            "Lumaco",
            "Melipeuco",
            "Nueva Imperial",
            "Padre Las Casas",
            "Perquenco",
            "Pitrufqu√©n",
            "Puc√≥n",
            "Pur√©n",
            "Renaico",
            "Saavedra",
            "Temuco",
            "Teodoro Schmidt",
            "Tolt√©n",
            "Traigu√©n",
            "Victoria",
            "Vilc√∫n",
            "Villarrica"
        ]
    },
    "los-rios": {
        nombre: "Los R√≠os",
        codigo: "XIV",
        comunas: [
            "Corral",
            "Futrono",
            "La Uni√≥n",
            "Lago Ranco",
            "Lanco",
            "Los Lagos",
            "M√°fil",
            "Mariquina",
            "Paillaco",
            "Panguipulli",
            "R√≠o Bueno",
            "Valdivia"
        ]
    },
    "los-lagos": {
        nombre: "Los Lagos",
        codigo: "X",
        comunas: [
            "Ancud",
            "Calbuco",
            "Castro",
            "Chait√©n",
            "Chonchi",
            "Cocham√≥",
            "Curaco de V√©lez",
            "Dalcahue",
            "Fresia",
            "Frutillar",
            "Futaleuf√∫",
            "Hualaihu√©",
            "Llanquihue",
            "Los Muermos",
            "Maull√≠n",
            "Osorno",
            "Palena",
            "Puerto Montt",
            "Puerto Octay",
            "Puerto Varas",
            "Puqueld√≥n",
            "Purranque",
            "Puyehue",
            "Queil√©n",
            "Quell√≥n",
            "Quemchi",
            "Quinchao",
            "R√≠o Negro",
            "San Juan de la Costa",
            "San Pablo"
        ]
    },
    "aysen": {
        nombre: "Ays√©n del General Carlos Ib√°√±ez del Campo",
        codigo: "XI",
        comunas: [
            "Ays√©n",
            "Chile Chico",
            "Cisnes",
            "Cochrane",
            "Coyhaique",
            "Guaitecas",
            "Lago Verde",
            "O'Higgins",
            "R√≠o Ib√°√±ez",
            "Tortel"
        ]
    },
    "magallanes": {
        nombre: "Magallanes y de la Ant√°rtica Chilena",
        codigo: "XII",
        comunas: [
            "Ant√°rtica",
            "Cabo de Hornos",
            "Laguna Blanca",
            "Natales",
            "Porvenir",
            "Primavera",
            "Punta Arenas",
            "R√≠o Verde",
            "San Gregorio",
            "Timaukel",
            "Torres del Paine"
        ]
    }
};

// üéØ FUNCIONES UTILITARIAS
class ChileLocationService {
    
    static getAllRegiones() {
        return Object.keys(REGIONES_COMUNAS_CHILE).map(key => ({
            codigo: key,
            nombre: REGIONES_COMUNAS_CHILE[key].nombre,
            numeroRegion: REGIONES_COMUNAS_CHILE[key].codigo
        }));
    }
    
    static getComunasByRegion(regionCodigo) {
        const region = REGIONES_COMUNAS_CHILE[regionCodigo];
        return region ? region.comunas : [];
    }
    
    static getRegionName(regionCodigo) {
        const region = REGIONES_COMUNAS_CHILE[regionCodigo];
        return region ? region.nombre : '';
    }
    
    static searchComunas(searchTerm) {
        const results = [];
        const term = searchTerm.toLowerCase();
        
        Object.keys(REGIONES_COMUNAS_CHILE).forEach(regionKey => {
            const region = REGIONES_COMUNAS_CHILE[regionKey];
            region.comunas.forEach(comuna => {
                if (comuna.toLowerCase().includes(term)) {
                    results.push({
                        comuna: comuna,
                        region: region.nombre,
                        regionCodigo: regionKey
                    });
                }
            });
        });
        
        return results;
    }
    
    static isValidRegionComuna(regionCodigo, comunaNombre) {
        const region = REGIONES_COMUNAS_CHILE[regionCodigo];
        if (!region) return false;
        
        return region.comunas.includes(comunaNombre);
    }
    
    // üìç FUNCI√ìN PARA GENERAR OPCIONES HTML DE REGIONES
    static generateRegionOptions() {
        const regiones = this.getAllRegiones();
        return regiones.map(region => 
            `<option value="${region.codigo}">${region.numeroRegion} - ${region.nombre}</option>`
        ).join('');
    }
    
    // üìç FUNCI√ìN PARA GENERAR OPCIONES HTML DE COMUNAS
    static generateComunaOptions(regionCodigo) {
        const comunas = this.getComunasByRegion(regionCodigo);
        return comunas.map(comuna => 
            `<option value="${comuna}">${comuna}</option>`
        ).join('');
    }
    
    // üéØ CONFIGURAR SELECTORES DEPENDIENTES (Regi√≥n -> Comuna)
    static setupRegionComunaSelectors(regionSelectId, comunaSelectId) {
        const regionSelect = document.getElementById(regionSelectId);
        const comunaSelect = document.getElementById(comunaSelectId);
        
        if (!regionSelect || !comunaSelect) {
            console.error('‚ùå No se encontraron los selectores:', regionSelectId, comunaSelectId);
            return;
        }
        
        // Llenar selector de regiones
        regionSelect.innerHTML = `
            <option value="">Seleccionar regi√≥n</option>
            ${this.generateRegionOptions()}
        `;
        
        // Configurar evento de cambio
        regionSelect.addEventListener('change', function() {
            const regionCodigo = this.value;
            
            if (regionCodigo) {
                comunaSelect.innerHTML = `
                    <option value="">Seleccionar comuna</option>
                    ${ChileLocationService.generateComunaOptions(regionCodigo)}
                `;
                comunaSelect.disabled = false;
            } else {
                comunaSelect.innerHTML = '<option value="">Primero selecciona una regi√≥n</option>';
                comunaSelect.disabled = true;
            }
        });
        
        // Inicializar comuna deshabilitada
        comunaSelect.innerHTML = '<option value="">Primero selecciona una regi√≥n</option>';
        comunaSelect.disabled = true;
        
        console.log('‚úÖ Selectores de Chile configurados correctamente');
    }
    
    // üåç NUEVO: Sistema de detecci√≥n autom√°tica de ubicaci√≥n por IP
    async setupAutoLocationDetection(regionSelectId, comunaSelectId) {
        console.log('üåç Iniciando detecci√≥n autom√°tica de ubicaci√≥n por IP...');
        
        const regionSelect = document.getElementById(regionSelectId);
        const comunaSelect = document.getElementById(comunaSelectId);
        
        if (!regionSelect || !comunaSelect) {
            console.warn('‚ö†Ô∏è Selectores de regi√≥n/comuna no encontrados para auto-detecci√≥n');
            return;
        }
        
        // Crear indicador de detecci√≥n
        this.mostrarIndicadorDeteccion(regionSelect);
        
        try {
            // üîç M√âTODO 1: Usar RealAnalyticsService si est√° disponible (como en gaby-presentaciones)
            if (window.RealAnalyticsService && window.RealAnalyticsService.visitorData) {
                console.log('‚úÖ Usando RealAnalyticsService para detecci√≥n de ubicaci√≥n');
                await this.detectarUbicacionConAnalytics(regionSelectId, comunaSelectId);
                return;
            }
            
            // üîç M√âTODO 2: Usar API de geolocalizaci√≥n IP p√∫blica como fallback
            console.log('üîÑ RealAnalyticsService no disponible, usando API de IP p√∫blica...');
            await this.detectarUbicacionConAPIPublica(regionSelectId, comunaSelectId);
            
        } catch (error) {
            console.error('‚ùå Error en detecci√≥n autom√°tica:', error);
            this.mostrarErrorDeteccion(regionSelect, 'Error detectando ubicaci√≥n autom√°ticamente');
        }
    }

    // üéØ Detectar ubicaci√≥n usando RealAnalyticsService (m√©todo principal)
    async detectarUbicacionConAnalytics(regionSelectId, comunaSelectId) {
        const visitorData = window.RealAnalyticsService.visitorData;
        const regionSelect = document.getElementById(regionSelectId);
        const comunaSelect = document.getElementById(comunaSelectId);
        
        console.log('üìç Datos del visitante obtenidos:', visitorData);
        
        if (visitorData?.ip) {
            const paisDetectado = visitorData.ip.country;
            const regionDetectada = visitorData.ip.region;
            const ciudadDetectada = visitorData.ip.city;
            const ipDetectada = visitorData.ip.ip;
            
            // Solo proceder si es Chile
            if (paisDetectado && (paisDetectado.toLowerCase().includes('chile') || paisDetectado === 'CL')) {
                console.log(`üá®üá± Usuario detectado en Chile - Regi√≥n: ${regionDetectada}, Ciudad: ${ciudadDetectada}`);
                
                // Mapear regi√≥n detectada a nuestras regiones
                const regionMapeada = this.mapearRegionDetectada(regionDetectada);
                const comunaMapeada = this.mapearComunaDetectada(ciudadDetectada, regionMapeada);
                
                if (regionMapeada) {
                    this.aplicarUbicacionDetectada(regionSelectId, comunaSelectId, regionMapeada, comunaMapeada, {
                        fuente: 'RealAnalyticsService',
                        ip: ipDetectada,
                        region_original: regionDetectada,
                        ciudad_original: ciudadDetectada
                    });
                } else {
                    console.warn('ü§î No se pudo mapear la regi√≥n detectada:', regionDetectada);
                    this.mostrarSugerenciaManual(regionSelect, regionDetectada, ciudadDetectada);
                }
            } else {
                console.log(`üåç Usuario detectado fuera de Chile: ${paisDetectado}`);
                this.mostrarMensajeUsuarioExtranjero(regionSelect, paisDetectado);
            }
        } else {
            console.warn('‚ö†Ô∏è No se pudieron obtener datos de IP del visitante');
            throw new Error('Datos de IP no disponibles');
        }
    }

    // üåê Detectar ubicaci√≥n usando API p√∫blica como fallback
    async detectarUbicacionConAPIPublica(regionSelectId, comunaSelectId) {
        console.log('üåê Detectando ubicaci√≥n con API p√∫blica de IP...');
        
        const regionSelect = document.getElementById(regionSelectId);
        
        try {
            // Usar ipapi.co como servicio gratuito confiable
            const response = await fetch('https://ipapi.co/json/', {
                timeout: 5000,
                headers: {
                    'Accept': 'application/json'
                }
            });
            
            if (!response.ok) {
                throw new Error(`API respondi√≥ con status: ${response.status}`);
            }
            
            const locationData = await response.json();
            console.log('üìç Datos de ubicaci√≥n obtenidos de ipapi.co:', locationData);
            
            if (locationData.country_code === 'CL' || locationData.country_name === 'Chile') {
                const regionDetectada = locationData.region;
                const ciudadDetectada = locationData.city;
                
                console.log(`üá®üá± Usuario en Chile - Regi√≥n: ${regionDetectada}, Ciudad: ${ciudadDetectada}`);
                
                const regionMapeada = this.mapearRegionDetectada(regionDetectada);
                const comunaMapeada = this.mapearComunaDetectada(ciudadDetectada, regionMapeada);
                
                if (regionMapeada) {
                    this.aplicarUbicacionDetectada(regionSelectId, comunaSelectId, regionMapeada, comunaMapeada, {
                        fuente: 'ipapi.co',
                        ip: locationData.ip,
                        region_original: regionDetectada,
                        ciudad_original: ciudadDetectada
                    });
                } else {
                    this.mostrarSugerenciaManual(regionSelect, regionDetectada, ciudadDetectada);
                }
            } else {
                console.log(`üåç Usuario fuera de Chile: ${locationData.country_name}`);
                this.mostrarMensajeUsuarioExtranjero(regionSelect, locationData.country_name);
            }
            
        } catch (error) {
            console.error('‚ùå Error con API p√∫blica de IP:', error);
            throw error;
        }
    }

    // üó∫Ô∏è Mapear regi√≥n detectada por IP a nuestras regiones de Chile
    mapearRegionDetectada(regionDetectada) {
        if (!regionDetectada) return null;
        
        const region = regionDetectada.toLowerCase().trim();
        
        // Mapeo de nombres de regiones comunes
        const mapeoRegiones = {
            // Nombres comunes a c√≥digos internos
            'metropolitana': 'metropolitana',
            'santiago': 'metropolitana',
            'region metropolitana': 'metropolitana',
            'rm': 'metropolitana',
            
            'valparaiso': 'valparaiso',
            'valpara√≠so': 'valparaiso',
            'quinta region': 'valparaiso',
            'v region': 'valparaiso',
            
            'biobio': 'biobio',
            'bio bio': 'biobio',
            'biob√≠o': 'biobio',
            'octava region': 'biobio',
            'viii region': 'biobio',
            
            'araucania': 'araucania',
            'araucan√≠a': 'araucania',
            'la araucania': 'araucania',
            'novena region': 'araucania',
            'ix region': 'araucania',
            
            'los lagos': 'los-lagos',
            'decima region': 'los-lagos',
            'x region': 'los-lagos',
            
            'antofagasta': 'antofagasta',
            'segunda region': 'antofagasta',
            'ii region': 'antofagasta',
            
            'coquimbo': 'coquimbo',
            'cuarta region': 'coquimbo',
            'iv region': 'coquimbo',
            
            'ohiggins': 'ohiggins',
            "o'higgins": 'ohiggins',
            'sexta region': 'ohiggins',
            'vi region': 'ohiggins',
            
            'maule': 'maule',
            'septima region': 'maule',
            'vii region': 'maule',
            
            'tarapaca': 'tarapaca',
            'tarapac√°': 'tarapaca',
            'primera region': 'tarapaca',
            'i region': 'tarapaca',
            
            'atacama': 'atacama',
            'tercera region': 'atacama',
            'iii region': 'atacama',
            
            'aysen': 'aysen',
            'ays√©n': 'aysen',
            'undecima region': 'aysen',
            'xi region': 'aysen',
            
            'magallanes': 'magallanes',
            'duodecima region': 'magallanes',
            'xii region': 'magallanes',
            
            'arica': 'arica-parinacota',
            'arica y parinacota': 'arica-parinacota',
            'decimoquinta region': 'arica-parinacota',
            'xv region': 'arica-parinacota',
            
            'nuble': 'nuble',
            '√±uble': 'nuble',
            'decimosexta region': 'nuble',
            'xvi region': 'nuble',
            
            'los rios': 'los-rios',
            'los r√≠os': 'los-rios',
            'decimocuarta region': 'los-rios',
            'xiv region': 'los-rios'
        };
        
        const regionMapeada = mapeoRegiones[region];
        console.log(`üó∫Ô∏è Mapeo de regi√≥n: "${regionDetectada}" ‚Üí "${regionMapeada}"`);
        
        return regionMapeada || null;
    }

    // üèôÔ∏è Mapear comuna detectada por IP
    mapearComunaDetectada(ciudadDetectada, regionCode) {
        if (!ciudadDetectada || !regionCode) return null;
        
        const ciudad = ciudadDetectada.toLowerCase().trim();
        const regionData = REGIONES_COMUNAS_CHILE[regionCode]; // CORREGIDO: usar la constante correcta
        const comunasRegion = regionData?.comunas || [];
        
        // Buscar coincidencia exacta primero
        let comunaEncontrada = comunasRegion.find(comuna => 
            comuna.toLowerCase() === ciudad
        );
        
        // Si no encuentra, buscar coincidencia parcial
        if (!comunaEncontrada) {
            comunaEncontrada = comunasRegion.find(comuna => 
                comuna.toLowerCase().includes(ciudad) || 
                ciudad.includes(comuna.toLowerCase())
            );
        }
        
        console.log(`üèôÔ∏è Mapeo de comuna: "${ciudadDetectada}" ‚Üí "${comunaEncontrada}" en regi√≥n ${regionCode}`);
        
        return comunaEncontrada || null;
    }

    // üìç M√©todos de utilidad para llenar selectores
    llenarSelectRegiones(regionSelectId) {
        const regionSelect = document.getElementById(regionSelectId);
        if (!regionSelect) return;
        
        regionSelect.innerHTML = `
            <option value="">Seleccionar regi√≥n</option>
            ${this.generateRegionOptions()}
        `;
    }

    llenarSelectComunas(comunaSelectId, regionCode) {
        const comunaSelect = document.getElementById(comunaSelectId);
        if (!comunaSelect) return;
        
        comunaSelect.innerHTML = `
            <option value="">Seleccionar comuna</option>
            ${this.generateComunaOptions(regionCode)}
        `;
        comunaSelect.disabled = false;
    }

    // üîÑ M√©todo principal actualizado para incluir detecci√≥n autom√°tica
    setupRegionComunaSelectorsWithAutoDetection(regionSelectId, comunaSelectId) {
        console.log('üöÄ Configurando selectores con detecci√≥n autom√°tica de ubicaci√≥n...');
        
        // Configurar selectores b√°sicos
        this.setupRegionComunaSelectors(regionSelectId, comunaSelectId);
        
        // Verificar si hay ubicaci√≥n guardada previamente
        const ubicacionGuardada = localStorage.getItem('chile-ubicacion-confirmada');
        if (ubicacionGuardada) {
            try {
                const ubicacion = JSON.parse(ubicacionGuardada);
                const tiempoTranscurrido = Date.now() - ubicacion.timestamp;
                
                // Si la ubicaci√≥n fue confirmada hace menos de 30 d√≠as, usarla
                if (tiempoTranscurrido < 30 * 24 * 60 * 60 * 1000) {
                    console.log('üìç Usando ubicaci√≥n guardada previamente');
                    this.aplicarUbicacionDetectada(regionSelectId, comunaSelectId, ubicacion.region, ubicacion.comuna, {
                        fuente: 'Guardada previamente',
                        ip: 'N/A',
                        region_original: ubicacion.region,
                        ciudad_original: ubicacion.comuna
                    });
                    return;
                }
            } catch (error) {
                console.warn('‚ö†Ô∏è Error leyendo ubicaci√≥n guardada:', error);
            }
        }
        
        // Intentar detecci√≥n autom√°tica
        setTimeout(() => {
            this.setupAutoLocationDetection(regionSelectId, comunaSelectId);
        }, 1000); // Esperar un segundo para que se carguen otros servicios
    }
}

// üåç EXPONER GLOBALMENTE
window.REGIONES_COMUNAS_CHILE = REGIONES_COMUNAS_CHILE;
window.ChileLocationService = ChileLocationService;

console.log('üá®üá± Sistema de regiones y comunas de Chile cargado - 16 regiones, 346 comunas');